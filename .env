# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB, and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="mongodb+srv://OsamaTechNest:OsamaTechNest@cluster0.vnohf.mongodb.net/TechNest?retryWrites=true&w=majority&maxPoolSize=10"
SECRET_KEY="e87ae886e49904ac30df7b0d6c934d70be9598420512a159cf2d43ccfba7effaa900e801b7ce807deaa37150dd606b301da11b87441a1ecf0beee5243296313f"

### maxPoolSize: Limits the maximum number of connections in the pool (e.g., 10 connections).
# After setting maxPoolSize, the following will happen:

# 1. Connection Pooling Behavior
# What Changes:
# - The database driver (Prisma with MongoDB) will create and maintain a pool of reusable connections.
# - The maximum number of connections to the database will be limited to the value of maxPoolSize (e.g., 10 in your configuration).
# Impact:
# - If there are multiple concurrent requests, Prisma will reuse existing connections instead of opening a new one each time.
# - This reduces the risk of exceeding the connection limit on your MongoDB Atlas cluster.

# 2. Handling Excess Requests
# If the number of concurrent requests exceeds the maxPoolSize limit:
# - Requests Are Queued: Excess requests wait in a queue until a connection becomes available.
# - Potential Latency: If the queue grows large, some requests might experience delays.
# - Timeouts: Requests exceeding the queue timeout period might fail with an error like "Connection timeout".

CLOUDINARY_CLOUD_NAME="dcspirja7"
CLOUDINARY_API_KEY="313962327776239"
CLOUDINARY_API_SECRET="rhOMiYt40MgiGWwMRTrZLc7AieI"
CLOUDINARY_URL="cloudinary://313962327776239:rhOMiYt40MgiGWwMRTrZLc7AieI@dcspirja7"